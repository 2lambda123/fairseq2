# Copyright (c) Meta Platforms, Inc. and affiliates.
# All rights reserved.
#
# This source code is licensed under the BSD-style license found in the
# LICENSE file in the root directory of this source tree.

name: Publish the artifacts

on:
  workflow_call:
    inputs:
      release_type:
        type: string
        required: true

defaults:
  run:
    shell: bash

jobs:
  publish_linux_x86_64:
    name: Publish the wheel for Linux x86-64
    strategy:
      max-parallel: 1
      matrix:
        py: ['3.8', '3.9', '3.10']
        torch: ['1.11', '1.12.1']
    uses: ./.github/workflows/publish_wheel.yaml
    with:
      py: ${{ matrix.py }}
      torch: ${{ matrix.torch }}
      os: 'linux'
      arch: 'x86_64'
      variant: 'cpu'

  publish_linux_x86_64_cu113:
    name: Publish the wheel for Linux x86-64 with CUDA 11.3
    needs: publish_linux_x86_64
    strategy:
      max-parallel: 1
      matrix:
        py: ['3.8', '3.9', '3.10']
        torch: ['1.11', '1.12.1']
    uses: ./.github/workflows/publish_wheel.yaml
    with:
      py: ${{ matrix.py }}
      torch: ${{ matrix.torch }}
      os: 'linux'
      arch: 'x86_64'
      variant: 'cu113'

  publish_linux_x86_64_cu116:
    name: Publish the wheel for Linux x86-64 with CUDA 11.6
    needs: publish_linux_x86_64_cu113
    strategy:
      max-parallel: 1
      matrix:
        py: ['3.8', '3.9', '3.10']
        torch: ['1.12.1']
    uses: ./.github/workflows/publish_wheel.yaml
    with:
      py: ${{ matrix.py }}
      torch: ${{ matrix.torch }}
      os: 'linux'
      arch: 'x86_64'
      variant: 'cu116'

  publish_doc:
    name: Publish the documentation
    needs: publish_linux_x86_64_cu116
    runs-on: ubuntu-latest
    steps:
      - name: Download the documentation from staging
        uses: actions/download-artifact@v3
        with:
          name: doc
          path: ~/doc
      - name: Check-out the gh-pages branch of the repository
        uses: actions/checkout@v3
        with:
          ref: gh-pages
      - name: Set up Git
        run: |
          git config user.name  "github-actions"
          git config user.email "github-actions@github.com"
      - name: Commit and push the documentation
        run: |
          release_type=${{ inputs.release_type }}

          if [[ $release_type == nightly ]]; then
            doc_dir=nightly
          else
            doc_dir=$(cat ~/doc/VERSION)
          fi

          rsync --recursive --delete-after ~/doc/ $doc_dir

          # Add all documentation to the Git index.
          git add --all

          # Push a commit only if there are changes in the documentation.
          if ! git diff --staged --quiet; then
            git commit --message "Generated from $(git rev-parse --short "$GITHUB_SHA")" && git push
          fi
